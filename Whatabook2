import sys
import mysql.connector
from mysql.connector import errorcode


config = {
  "user": "whatabook_user",
  "password": "MySQL8IsGreat!",
  "host": "127.0.0.1",
  "database": "whatabook",
  "raise_on_warnings": True,
}


def show_menu():
  print("\n Menu ")

  print(" 1. Books\n 2. Locations\n 3. My Account\n 4. Exit")

  try:
  choice = int(input(" <Example: enter 1 for books>: "))

  return choice
  except ValueError:
  print("\n Invalid selection, exiting...\n")

  sys.exit(0)


def show_books(_cursor):
  # inner join
  _cursor.execute("SELECT book_id, book_name, author, details from book")

  # get results
  books = _cursor.fetchall()

  print("\n Displaying Books")

  # displa results
  for book in books:
  print(
  " Book Name: {}\n Author: {}\n Details: {}\n".format(
  book[0], book[1], book[2]
  )
  )


def show_locations(_cursor):
  _cursor.execute("SELECT store_id, locale from store")

  locations = _cursor.fetchall()

  print("\n Showing Locations")

  for location in locations:
  print(" Locale: {}\n".format(location[1]))


def validate_user():
  """validate userID"""

  try:
  user_id = int(input("\n Enter customer ID <Example: 1 for user_id 1>: "))

  if user_id < 0 or user_id > 3:
  print("\n Invalid selection, exiting...\\n")
  sys.exit(0)

  return user_id
  except ValueError:
  print("\n Invalid selection, exiting...\\n")

  sys.exit(0)


def show_account_menu():
  """Displaying My Account"""

  try:
  print("\n -- Customer Menu --")
  print(" 1. Wishlist\n 2. Add a Book\n 3. Menu")
  account_option = int(input(" <Example: 1 for wishlist>: "))

  return account_option
  except ValueError:
  print("\n Invalid selection, exiting...\\n")

  sys.exit(0)


def show_wishlist(_cursor, _user_id):
  """show books added to wishlist"""

  _cursor.execute(
  "SELECT user.user_id, user.first_name, user.last_name, book.book_id, book.book_name, book.author "
  + "FROM wishlist "
  + "INNER JOIN user ON wishlist.user_id = user.user_id "
  + "INNER JOIN book ON wishlist.book_id = book.book_id "
  + "WHERE user.user_id = {}".format(_user_id)
  )

  wishlist = _cursor.fetchall()

  print("\n Displaying Wishlist")

  for book in wishlist:
  print(" Book Name: {}\n Author: {}\n".format(book[4], book[5]))


def show_books_to_add(_cursor, _user_id):
  """show books not added to wishlist"""

  query = (
  "SELECT book_id, book_name, author, details "
  "FROM book "
  "WHERE book_id NOT IN (SELECT book_id FROM wishlist WHERE user_id = {})".format(
  _user_id
  )
  )

  print(query)

  _cursor.execute(query)

  books_to_add = _cursor.fetchall()

  print("\n Displaying Books not in Wishlist")

  for book in books_to_add:
  print(" Book Id: {}\n Book Name: {}\n".format(book[0], book[1]))


def add_book_to_wishlist(_cursor, _user_id, _book_id):
  _cursor.execute(
  "INSERT INTO wishlist(user_id, book_id) VALUES({}, {})".format(
  _user_id, _book_id
  )
  )


try:
  """try/catch block for errors"""

  db = mysql.connector.connect(**config) # connect to the database

  cursor = db.cursor()

  print("\n Welcome to WhatABook ")

  user_selection = show_menu() # show menu

  # while the selection is not 4
  while user_selection != 4:

  # if the user selects 1, show books
  if user_selection == 1:
  show_books(cursor)

  # if the user selects 2 then show locations
  if user_selection == 2:
  show_locations(cursor)

  # if the user selects 3 thaen show my account
  if user_selection == 3:
  my_user_id = validate_user()
  account_option = show_account_menu()

  while account_option != 3:

  # if user sselects 1 show wishlist
  if account_option == 1:
  show_wishlist(cursor, my_user_id)

  # if user selects 2, show whats not on the wishlist
  if account_option == 2:

  # show the books not in wihslistt
  show_books_to_add(cursor, my_user_id)

  # get book_id
  book_id = int(
  input("\n Enter ID of the book you want to add: ")
  )

  # add book to the wishlist
  add_book_to_wishlist(cursor, my_user_id, book_id)

  db.commit() # commit

  print(
  "\n Book id: {} was added to the wishlist".format(
  book_id
  )
  )

  # if the selected option is less than 0 or greater than 3, display an error message
  if account_option < 0 or account_option > 3:
  print("\n Invalid option, please retry...")

  # show account menu
  account_option = show_account_menu()

  # if the user selection is less than 0 or greater than 4, display an error
  if user_selection < 0 or user_selection > 4:
  print("\n Invalid option, please retry...")

  # show menu
  user_selection = show_menu()

  print("\n\n Program terminated...")

except mysql.connector.Error as err:
  """errors"""

  if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:
  print(" The username or password are invalid")

  elif err.errno == errorcode.ER_BAD_DB_ERROR:
  print(" The specified database is invalid")

  else:
  print(err)

finally:
  """close the connection"""

  db.close()
